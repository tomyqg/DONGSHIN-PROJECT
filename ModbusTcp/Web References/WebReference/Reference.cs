//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace ModbusTcp.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCompanyInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompanyInfoWithRegiNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCompanyRegiNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMachineIpListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMachineIpList_JsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntireMemorymaps_JsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMemorymap_JsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMemorymapOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMachineDatatable_JsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getErrorList_JsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntireErrorList_JsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyInfoWithAuthentication_JsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInformation_JsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFcmTokenOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::ModbusTcp.Properties.Settings.Default.ModbusTcp_WebReference_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCompanyInfoCompletedEventHandler getCompanyInfoCompleted;
        
        /// <remarks/>
        public event getCompanyInfoWithRegiNumberCompletedEventHandler getCompanyInfoWithRegiNumberCompleted;
        
        /// <remarks/>
        public event CheckCompanyRegiNumberCompletedEventHandler CheckCompanyRegiNumberCompleted;
        
        /// <remarks/>
        public event getMachineIpListCompletedEventHandler getMachineIpListCompleted;
        
        /// <remarks/>
        public event getMachineIpList_JsonCompletedEventHandler getMachineIpList_JsonCompleted;
        
        /// <remarks/>
        public event getEntireMemorymaps_JsonCompletedEventHandler getEntireMemorymaps_JsonCompleted;
        
        /// <remarks/>
        public event getMemorymap_JsonCompletedEventHandler getMemorymap_JsonCompleted;
        
        /// <remarks/>
        public event getMemorymapCompletedEventHandler getMemorymapCompleted;
        
        /// <remarks/>
        public event getMachineDatatable_JsonCompletedEventHandler getMachineDatatable_JsonCompleted;
        
        /// <remarks/>
        public event getErrorList_JsonCompletedEventHandler getErrorList_JsonCompleted;
        
        /// <remarks/>
        public event getEntireErrorList_JsonCompletedEventHandler getEntireErrorList_JsonCompleted;
        
        /// <remarks/>
        public event GetCompanyInfoWithAuthentication_JsonCompletedEventHandler GetCompanyInfoWithAuthentication_JsonCompleted;
        
        /// <remarks/>
        public event getUserInformation_JsonCompletedEventHandler getUserInformation_JsonCompleted;
        
        /// <remarks/>
        public event UpdateFcmTokenCompletedEventHandler UpdateFcmTokenCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCompanyInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getCompanyInfo(string companyCode) {
            object[] results = this.Invoke("getCompanyInfo", new object[] {
                        companyCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getCompanyInfoAsync(string companyCode) {
            this.getCompanyInfoAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void getCompanyInfoAsync(string companyCode, object userState) {
            if ((this.getCompanyInfoOperationCompleted == null)) {
                this.getCompanyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompanyInfoOperationCompleted);
            }
            this.InvokeAsync("getCompanyInfo", new object[] {
                        companyCode}, this.getCompanyInfoOperationCompleted, userState);
        }
        
        private void OngetCompanyInfoOperationCompleted(object arg) {
            if ((this.getCompanyInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompanyInfoCompleted(this, new getCompanyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCompanyInfoWithRegiNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getCompanyInfoWithRegiNumber(string companyRegiNumber) {
            object[] results = this.Invoke("getCompanyInfoWithRegiNumber", new object[] {
                        companyRegiNumber});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getCompanyInfoWithRegiNumberAsync(string companyRegiNumber) {
            this.getCompanyInfoWithRegiNumberAsync(companyRegiNumber, null);
        }
        
        /// <remarks/>
        public void getCompanyInfoWithRegiNumberAsync(string companyRegiNumber, object userState) {
            if ((this.getCompanyInfoWithRegiNumberOperationCompleted == null)) {
                this.getCompanyInfoWithRegiNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompanyInfoWithRegiNumberOperationCompleted);
            }
            this.InvokeAsync("getCompanyInfoWithRegiNumber", new object[] {
                        companyRegiNumber}, this.getCompanyInfoWithRegiNumberOperationCompleted, userState);
        }
        
        private void OngetCompanyInfoWithRegiNumberOperationCompleted(object arg) {
            if ((this.getCompanyInfoWithRegiNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompanyInfoWithRegiNumberCompleted(this, new getCompanyInfoWithRegiNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCompanyRegiNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckCompanyRegiNumber(string companyRegiNumber) {
            object[] results = this.Invoke("CheckCompanyRegiNumber", new object[] {
                        companyRegiNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCompanyRegiNumberAsync(string companyRegiNumber) {
            this.CheckCompanyRegiNumberAsync(companyRegiNumber, null);
        }
        
        /// <remarks/>
        public void CheckCompanyRegiNumberAsync(string companyRegiNumber, object userState) {
            if ((this.CheckCompanyRegiNumberOperationCompleted == null)) {
                this.CheckCompanyRegiNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCompanyRegiNumberOperationCompleted);
            }
            this.InvokeAsync("CheckCompanyRegiNumber", new object[] {
                        companyRegiNumber}, this.CheckCompanyRegiNumberOperationCompleted, userState);
        }
        
        private void OnCheckCompanyRegiNumberOperationCompleted(object arg) {
            if ((this.CheckCompanyRegiNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCompanyRegiNumberCompleted(this, new CheckCompanyRegiNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMachineIpList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getMachineIpList(string companyCode) {
            object[] results = this.Invoke("getMachineIpList", new object[] {
                        companyCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getMachineIpListAsync(string companyCode) {
            this.getMachineIpListAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void getMachineIpListAsync(string companyCode, object userState) {
            if ((this.getMachineIpListOperationCompleted == null)) {
                this.getMachineIpListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMachineIpListOperationCompleted);
            }
            this.InvokeAsync("getMachineIpList", new object[] {
                        companyCode}, this.getMachineIpListOperationCompleted, userState);
        }
        
        private void OngetMachineIpListOperationCompleted(object arg) {
            if ((this.getMachineIpListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMachineIpListCompleted(this, new getMachineIpListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMachineIpList_Json", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getMachineIpList_Json(string companyCode) {
            object[] results = this.Invoke("getMachineIpList_Json", new object[] {
                        companyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMachineIpList_JsonAsync(string companyCode) {
            this.getMachineIpList_JsonAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void getMachineIpList_JsonAsync(string companyCode, object userState) {
            if ((this.getMachineIpList_JsonOperationCompleted == null)) {
                this.getMachineIpList_JsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMachineIpList_JsonOperationCompleted);
            }
            this.InvokeAsync("getMachineIpList_Json", new object[] {
                        companyCode}, this.getMachineIpList_JsonOperationCompleted, userState);
        }
        
        private void OngetMachineIpList_JsonOperationCompleted(object arg) {
            if ((this.getMachineIpList_JsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMachineIpList_JsonCompleted(this, new getMachineIpList_JsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEntireMemorymaps_Json", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getEntireMemorymaps_Json(string companyCode, string mapTypes) {
            object[] results = this.Invoke("getEntireMemorymaps_Json", new object[] {
                        companyCode,
                        mapTypes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEntireMemorymaps_JsonAsync(string companyCode, string mapTypes) {
            this.getEntireMemorymaps_JsonAsync(companyCode, mapTypes, null);
        }
        
        /// <remarks/>
        public void getEntireMemorymaps_JsonAsync(string companyCode, string mapTypes, object userState) {
            if ((this.getEntireMemorymaps_JsonOperationCompleted == null)) {
                this.getEntireMemorymaps_JsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntireMemorymaps_JsonOperationCompleted);
            }
            this.InvokeAsync("getEntireMemorymaps_Json", new object[] {
                        companyCode,
                        mapTypes}, this.getEntireMemorymaps_JsonOperationCompleted, userState);
        }
        
        private void OngetEntireMemorymaps_JsonOperationCompleted(object arg) {
            if ((this.getEntireMemorymaps_JsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntireMemorymaps_JsonCompleted(this, new getEntireMemorymaps_JsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMemorymap_Json", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getMemorymap_Json(string companyCode, string mapType) {
            object[] results = this.Invoke("getMemorymap_Json", new object[] {
                        companyCode,
                        mapType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMemorymap_JsonAsync(string companyCode, string mapType) {
            this.getMemorymap_JsonAsync(companyCode, mapType, null);
        }
        
        /// <remarks/>
        public void getMemorymap_JsonAsync(string companyCode, string mapType, object userState) {
            if ((this.getMemorymap_JsonOperationCompleted == null)) {
                this.getMemorymap_JsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMemorymap_JsonOperationCompleted);
            }
            this.InvokeAsync("getMemorymap_Json", new object[] {
                        companyCode,
                        mapType}, this.getMemorymap_JsonOperationCompleted, userState);
        }
        
        private void OngetMemorymap_JsonOperationCompleted(object arg) {
            if ((this.getMemorymap_JsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMemorymap_JsonCompleted(this, new getMemorymap_JsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMemorymap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getMemorymap(string companyCode, string mapType) {
            object[] results = this.Invoke("getMemorymap", new object[] {
                        companyCode,
                        mapType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getMemorymapAsync(string companyCode, string mapType) {
            this.getMemorymapAsync(companyCode, mapType, null);
        }
        
        /// <remarks/>
        public void getMemorymapAsync(string companyCode, string mapType, object userState) {
            if ((this.getMemorymapOperationCompleted == null)) {
                this.getMemorymapOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMemorymapOperationCompleted);
            }
            this.InvokeAsync("getMemorymap", new object[] {
                        companyCode,
                        mapType}, this.getMemorymapOperationCompleted, userState);
        }
        
        private void OngetMemorymapOperationCompleted(object arg) {
            if ((this.getMemorymapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMemorymapCompleted(this, new getMemorymapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMachineDatatable_Json", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getMachineDatatable_Json(string companyCode, string machineCode, string fieldCodes, string selectedDate) {
            object[] results = this.Invoke("getMachineDatatable_Json", new object[] {
                        companyCode,
                        machineCode,
                        fieldCodes,
                        selectedDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMachineDatatable_JsonAsync(string companyCode, string machineCode, string fieldCodes, string selectedDate) {
            this.getMachineDatatable_JsonAsync(companyCode, machineCode, fieldCodes, selectedDate, null);
        }
        
        /// <remarks/>
        public void getMachineDatatable_JsonAsync(string companyCode, string machineCode, string fieldCodes, string selectedDate, object userState) {
            if ((this.getMachineDatatable_JsonOperationCompleted == null)) {
                this.getMachineDatatable_JsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMachineDatatable_JsonOperationCompleted);
            }
            this.InvokeAsync("getMachineDatatable_Json", new object[] {
                        companyCode,
                        machineCode,
                        fieldCodes,
                        selectedDate}, this.getMachineDatatable_JsonOperationCompleted, userState);
        }
        
        private void OngetMachineDatatable_JsonOperationCompleted(object arg) {
            if ((this.getMachineDatatable_JsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMachineDatatable_JsonCompleted(this, new getMachineDatatable_JsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getErrorList_Json", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getErrorList_Json(string companyCode, string machineCode) {
            object[] results = this.Invoke("getErrorList_Json", new object[] {
                        companyCode,
                        machineCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getErrorList_JsonAsync(string companyCode, string machineCode) {
            this.getErrorList_JsonAsync(companyCode, machineCode, null);
        }
        
        /// <remarks/>
        public void getErrorList_JsonAsync(string companyCode, string machineCode, object userState) {
            if ((this.getErrorList_JsonOperationCompleted == null)) {
                this.getErrorList_JsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetErrorList_JsonOperationCompleted);
            }
            this.InvokeAsync("getErrorList_Json", new object[] {
                        companyCode,
                        machineCode}, this.getErrorList_JsonOperationCompleted, userState);
        }
        
        private void OngetErrorList_JsonOperationCompleted(object arg) {
            if ((this.getErrorList_JsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getErrorList_JsonCompleted(this, new getErrorList_JsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEntireErrorList_Json", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getEntireErrorList_Json(string companyCode) {
            object[] results = this.Invoke("getEntireErrorList_Json", new object[] {
                        companyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEntireErrorList_JsonAsync(string companyCode) {
            this.getEntireErrorList_JsonAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void getEntireErrorList_JsonAsync(string companyCode, object userState) {
            if ((this.getEntireErrorList_JsonOperationCompleted == null)) {
                this.getEntireErrorList_JsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntireErrorList_JsonOperationCompleted);
            }
            this.InvokeAsync("getEntireErrorList_Json", new object[] {
                        companyCode}, this.getEntireErrorList_JsonOperationCompleted, userState);
        }
        
        private void OngetEntireErrorList_JsonOperationCompleted(object arg) {
            if ((this.getEntireErrorList_JsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntireErrorList_JsonCompleted(this, new getEntireErrorList_JsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyInfoWithAuthentication_Json", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCompanyInfoWithAuthentication_Json(string companyRegiNumber, string userId, string userPw) {
            object[] results = this.Invoke("GetCompanyInfoWithAuthentication_Json", new object[] {
                        companyRegiNumber,
                        userId,
                        userPw});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyInfoWithAuthentication_JsonAsync(string companyRegiNumber, string userId, string userPw) {
            this.GetCompanyInfoWithAuthentication_JsonAsync(companyRegiNumber, userId, userPw, null);
        }
        
        /// <remarks/>
        public void GetCompanyInfoWithAuthentication_JsonAsync(string companyRegiNumber, string userId, string userPw, object userState) {
            if ((this.GetCompanyInfoWithAuthentication_JsonOperationCompleted == null)) {
                this.GetCompanyInfoWithAuthentication_JsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyInfoWithAuthentication_JsonOperationCompleted);
            }
            this.InvokeAsync("GetCompanyInfoWithAuthentication_Json", new object[] {
                        companyRegiNumber,
                        userId,
                        userPw}, this.GetCompanyInfoWithAuthentication_JsonOperationCompleted, userState);
        }
        
        private void OnGetCompanyInfoWithAuthentication_JsonOperationCompleted(object arg) {
            if ((this.GetCompanyInfoWithAuthentication_JsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyInfoWithAuthentication_JsonCompleted(this, new GetCompanyInfoWithAuthentication_JsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserInformation_Json", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserInformation_Json(string companyCode, string phoneNumber) {
            object[] results = this.Invoke("getUserInformation_Json", new object[] {
                        companyCode,
                        phoneNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInformation_JsonAsync(string companyCode, string phoneNumber) {
            this.getUserInformation_JsonAsync(companyCode, phoneNumber, null);
        }
        
        /// <remarks/>
        public void getUserInformation_JsonAsync(string companyCode, string phoneNumber, object userState) {
            if ((this.getUserInformation_JsonOperationCompleted == null)) {
                this.getUserInformation_JsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInformation_JsonOperationCompleted);
            }
            this.InvokeAsync("getUserInformation_Json", new object[] {
                        companyCode,
                        phoneNumber}, this.getUserInformation_JsonOperationCompleted, userState);
        }
        
        private void OngetUserInformation_JsonOperationCompleted(object arg) {
            if ((this.getUserInformation_JsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInformation_JsonCompleted(this, new getUserInformation_JsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFcmToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFcmToken(string companyCode, string fcmToken, string allowPush) {
            this.Invoke("UpdateFcmToken", new object[] {
                        companyCode,
                        fcmToken,
                        allowPush});
        }
        
        /// <remarks/>
        public void UpdateFcmTokenAsync(string companyCode, string fcmToken, string allowPush) {
            this.UpdateFcmTokenAsync(companyCode, fcmToken, allowPush, null);
        }
        
        /// <remarks/>
        public void UpdateFcmTokenAsync(string companyCode, string fcmToken, string allowPush, object userState) {
            if ((this.UpdateFcmTokenOperationCompleted == null)) {
                this.UpdateFcmTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFcmTokenOperationCompleted);
            }
            this.InvokeAsync("UpdateFcmToken", new object[] {
                        companyCode,
                        fcmToken,
                        allowPush}, this.UpdateFcmTokenOperationCompleted, userState);
        }
        
        private void OnUpdateFcmTokenOperationCompleted(object arg) {
            if ((this.UpdateFcmTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFcmTokenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCompanyInfoCompletedEventHandler(object sender, getCompanyInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompanyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompanyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCompanyInfoWithRegiNumberCompletedEventHandler(object sender, getCompanyInfoWithRegiNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompanyInfoWithRegiNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompanyInfoWithRegiNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CheckCompanyRegiNumberCompletedEventHandler(object sender, CheckCompanyRegiNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCompanyRegiNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCompanyRegiNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getMachineIpListCompletedEventHandler(object sender, getMachineIpListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMachineIpListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMachineIpListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getMachineIpList_JsonCompletedEventHandler(object sender, getMachineIpList_JsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMachineIpList_JsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMachineIpList_JsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEntireMemorymaps_JsonCompletedEventHandler(object sender, getEntireMemorymaps_JsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntireMemorymaps_JsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntireMemorymaps_JsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getMemorymap_JsonCompletedEventHandler(object sender, getMemorymap_JsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMemorymap_JsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMemorymap_JsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getMemorymapCompletedEventHandler(object sender, getMemorymapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMemorymapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMemorymapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getMachineDatatable_JsonCompletedEventHandler(object sender, getMachineDatatable_JsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMachineDatatable_JsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMachineDatatable_JsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getErrorList_JsonCompletedEventHandler(object sender, getErrorList_JsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getErrorList_JsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getErrorList_JsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getEntireErrorList_JsonCompletedEventHandler(object sender, getEntireErrorList_JsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntireErrorList_JsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntireErrorList_JsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetCompanyInfoWithAuthentication_JsonCompletedEventHandler(object sender, GetCompanyInfoWithAuthentication_JsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyInfoWithAuthentication_JsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyInfoWithAuthentication_JsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getUserInformation_JsonCompletedEventHandler(object sender, getUserInformation_JsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInformation_JsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInformation_JsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateFcmTokenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591